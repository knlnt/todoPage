{"version":3,"sources":["components/Btn/Btn.js","consts.js","components/Form/TaskManager.js","components/Task/Task.js","components/Tasks/Tasks.js","components/App/App.js","index.js"],"names":["Btn","props","value","onClick","react_default","a","createElement","className","type","TYPE_TASK_MANAGER","newTask","editTask","INITIAL_STATE","id","name","info","done","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addNewTask","onAddTask","state","onEdit","delTask","onDelete","handleInputChange","event","_event$target","target","setState","defineProperty","handleSubmitForm","onClose","handleDoneClick","prevState","handleCancelClick","task","_this2","_this$state","placeholder","onChange","required","components_Btn_Btn","Component","Task","_ref","key","Tasks","tasks","map","components_Task_Task","App","typeTaskManager","currentTask","updateTypeTaskManager","getIdForNewTask","length","getCurrentTask","findIndex","toZeroCurrentTask","handleNewTask","handleAddTask","concat","toConsumableArray","handleEditTask","handleDeleteTask","idDelTask","filter","handleOpenTask","handleCloseTaskManager","title","components_Tasks_Tasks","Form_TaskManager","ReactDom","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.cd5ba2ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Btn.css\";\r\n\r\nfunction Btn(props) {\r\n  const { value, onClick } = props;\r\n\r\n  return (\r\n    <input className=\"btn\" type=\"button\" value={value} onClick={onClick} />\r\n  );\r\n}\r\n\r\nexport default Btn;\r\n","export const TYPE_TASK_MANAGER = {\r\n  newTask: 1,\r\n  editTask: 2\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Btn from \"../Btn/Btn\";\r\nimport { TYPE_TASK_MANAGER } from \"./../../consts\";\r\nimport \"./TaskManager.css\";\r\nconst INITIAL_STATE = {\r\n  id: 0,\r\n  name: \"\",\r\n  info: \"\",\r\n  done: false\r\n};\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state =\r\n      props.type === TYPE_TASK_MANAGER.newTask ? INITIAL_STATE : props.task;\r\n  }\r\n  render() {\r\n    const { name, info, done } = this.state;\r\n    const { type } = this.props;\r\n\r\n    return (\r\n      <div className=\"window\">\r\n        {type === TYPE_TASK_MANAGER.newTask && <h2>Новая задача</h2>}\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Название\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n          <textarea\r\n            name=\"info\"\r\n            placeholder=\"Описание\"\r\n            value={info}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n          {type === TYPE_TASK_MANAGER.editTask && (\r\n            <p>\r\n              Состояние:\r\n              <label\r\n                className={\"done \" + (done && \"doneEnd\")}\r\n                onClick={this.handleDoneClick}\r\n              >\r\n                {done ? \"Завершена\" : \"В процессе\"}\r\n              </label>\r\n            </p>\r\n          )}\r\n          <Btn\r\n            value={\r\n              type === TYPE_TASK_MANAGER.newTask ? \"Добавить\" : \"Сохранить\"\r\n            }\r\n            onClick={() =>\r\n              this.handleSubmitForm(\r\n                type === TYPE_TASK_MANAGER.newTask ? \"add\" : \"save\"\r\n              )\r\n            }\r\n          />\r\n          {type === TYPE_TASK_MANAGER.editTask && (\r\n            <Btn value=\"Удалить\" onClick={() => this.handleSubmitForm(\"del\")} />\r\n          )}\r\n          <Btn value=\"Отмена\" onClick={this.handleCancelClick} />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  addNewTask = () => {\r\n    this.props.onAddTask(this.state);\r\n  };\r\n  editTask = () => {\r\n    this.props.onEdit(this.state);\r\n  };\r\n  delTask = () => {\r\n    this.props.onDelete(this.state.id);\r\n  };\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  handleSubmitForm = type => {\r\n    switch (type) {\r\n      case \"add\":\r\n        this.addNewTask();\r\n        break;\r\n      case \"save\":\r\n        this.editTask();\r\n        break;\r\n      case \"del\":\r\n        this.delTask();\r\n        break;\r\n    }\r\n    this.props.onClose();\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n  handleDoneClick = () => {\r\n    this.setState(prevState => ({\r\n      done: !prevState.done\r\n    }));\r\n  };\r\n  handleCancelClick = () => {\r\n    this.props.onClose();\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = ({ task, onClick }) => {\r\n  const { id, done, name } = task;\r\n  return (\r\n    <li key={id} onClick={() => onClick(id)} className={done ? \"endTask\" : \"\"}>\r\n      {name}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./../Task/Task\";\r\nimport \"./Tasks.css\";\r\n\r\nconst Tasks = ({ tasks, onClick }) => {\r\n  return (\r\n    <ul>\r\n      {tasks.map(task => (\r\n        <Task key={task.id} task={task} onClick={onClick} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport TaskManager from \"../Form/TaskManager\";\r\nimport Tasks from \"./../Tasks/Tasks\";\r\nimport { TYPE_TASK_MANAGER } from \"./../../consts\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    typeTaskManager: TYPE_TASK_MANAGER.newTask,\r\n    tasks: [],\r\n    currentTask: null\r\n  };\r\n  render() {\r\n    const { tasks, typeTaskManager, currentTask } = this.state;\r\n    return (\r\n      <div id=\"main\">\r\n        <h1>\r\n          <span title=\"Новая задача\" onClick={this.handleNewTask}>\r\n            +\r\n          </span>{\" \"}\r\n          | Задачи\r\n        </h1>\r\n        {tasks.length > 0 ? (\r\n          <Tasks tasks={tasks} onClick={this.handleOpenTask} />\r\n        ) : (\r\n          <div>Задач нет</div>\r\n        )}\r\n        {currentTask && (\r\n          <TaskManager\r\n            type={typeTaskManager}\r\n            onClose={this.handleCloseTaskManager}\r\n            task={currentTask}\r\n            onAddTask={this.handleAddTask}\r\n            onEdit={this.handleEditTask}\r\n            onDelete={this.handleDeleteTask}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  updateTypeTaskManager = type => {\r\n    this.setState({\r\n      typeTaskManager: type\r\n    });\r\n  };\r\n  getIdForNewTask = () => {\r\n    return this.state.tasks.length > 0\r\n      ? this.state.tasks[this.state.tasks.length - 1].id + 1\r\n      : 0;\r\n  };\r\n  getCurrentTask = id => {\r\n    return this.state.tasks[this.state.tasks.findIndex(task => task.id === id)];\r\n  };\r\n  toZeroCurrentTask = () => {\r\n    this.setState({\r\n      currentTask: null\r\n    });\r\n  };\r\n  handleNewTask = () => {\r\n    this.updateTypeTaskManager(TYPE_TASK_MANAGER.newTask);\r\n    this.setState({\r\n      currentTask: -1\r\n    });\r\n  };\r\n  handleAddTask = newTask => {\r\n    newTask.id = this.getIdForNewTask();\r\n    this.setState(prevState => ({\r\n      tasks: [...prevState.tasks, newTask]\r\n    }));\r\n    this.toZeroCurrentTask();\r\n  };\r\n  handleEditTask = currentTask => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.map(task => {\r\n        return currentTask.id === task.id ? currentTask : task;\r\n      })\r\n    }));\r\n    this.toZeroCurrentTask();\r\n  };\r\n  handleDeleteTask = idDelTask => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.filter(task => {\r\n        return task.id !== idDelTask;\r\n      })\r\n    }));\r\n    this.toZeroCurrentTask();\r\n  };\r\n  handleOpenTask = id => {\r\n    this.setState({\r\n      currentTask: this.getCurrentTask(id)\r\n    });\r\n    this.updateTypeTaskManager(TYPE_TASK_MANAGER.editTask);\r\n  };\r\n  handleCloseTaskManager = () => {\r\n    this.toZeroCurrentTask();\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\"\r\nimport ReactDom from \"react-dom\"\r\nimport App from \"./components/App/App\"\r\nimport \"./index.css\"\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}